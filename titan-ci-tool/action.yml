name: 'Security Scan with TITAN Inference Model'
description: 'Runs security scans calling inference model with customizable file exclusions'

inputs:
  api_base_url:
    description: 'URL for the backend API'
    required: true
  report_format:
    description: 'The report output format type (md|pdf|xml)'
    required: false
    default: 'md'
  timeout_seconds:
    description: 'Timeout to call the API before failing (in seconds)'
    required: false
    default: '300'
  exclude_files:
    description: 'Comma-separated list of file patterns to exclude from scanning (glob)'
    required: false
    default: ''
  blocking:
    description: 'Whether this step is blocking (fail on issues) or non-blocking'
    required: false
    default: 'true'
  block_percentage:
    description: 'Percentage of files with issues required to block (default: 50)'
    required: false
    default: '50'

runs:
  using: 'composite'
  steps:
    - name: Setup PDF generation tools
      if: ${{ inputs.report_format == 'pdf' }}
      shell: bash
      run: |
        echo "Setting up PDF generation tools..."
        
        # Check if Node.js is available
        if command -v node >/dev/null 2>&1; then
          echo "✅ Node.js is available"
          node_version=$(node --version)
          echo "Node.js version: $node_version"
        else
          echo "❌ Node.js not found"
          exit 1
        fi
        
        # Install md2pdf for PDF generation
        echo "Installing md2pdf for reliable PDF generation..."
        if npm install -g md2pdf; then
          echo "✅ md2pdf installed successfully"
          md2pdf --version 2>/dev/null || echo "md2pdf installed (version check not available)"
        else
          echo "❌ Failed to install md2pdf"
          exit 1
        fi
      
    - name: Run security scan with SSE
      id: scan
      shell: bash
      working-directory: ${{ github.action_path }}
      run: |
        chmod +x ./entrypoint.sh
        ./entrypoint.sh
      env:
        API_BASE_URL: ${{ inputs.api_base_url }}
        REPORT_FORMAT: ${{ inputs.report_format }}
        TIMEOUT_SECONDS: ${{ inputs.timeout_seconds }}
        EXCLUDE_FILES: ${{ inputs.exclude_files }}
        BLOCKING: ${{ inputs.blocking }}
        BLOCK_PERCENTAGE: ${{ inputs.block_percentage }}
      
