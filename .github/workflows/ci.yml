name: CI Pipeline with Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache server dependencies
      uses: actions/cache@v3
      with:
        path: server/node_modules
        key: ${{ runner.os }}-server-node-${{ hashFiles('server/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-server-node-

    - name: Install server dependencies
      working-directory: ./server
      run: npm ci

    - name: Cache client dependencies
      uses: actions/cache@v3
      with:
        path: client/node_modules
        key: ${{ runner.os }}-client-node-${{ hashFiles('client/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-client-node-

  security-scan:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run TITAN Security Scan
      uses: ./titan-ci-tool
      with:
        api_base_url: ${{ secrets.TITAN_API_BASE_URL }}
        report_format: 'pdf'
        timeout_seconds: 300
        blocking: true
        block_percentage: 70

    - name: Security scan summary
      if: failure()
      run: |
        echo "Security scan completed but found vulnerabilities above threshold"
        echo "Review the security report to identify and fix the issues"
        echo "Build failed due to security policy enforcement"

    - name: Upload security report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: titan-ci-tool/security_report.*
        retention-days: 30
